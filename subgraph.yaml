specVersion: 0.0.2
description: Subgraph with support for the DVM data and synthetic tokens made with UMA, as well as supported identifiers, token holder balances, proposals and many more.
repository: https://github.com/protofire/uma-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Finder
    network: mainnet
    source:
      address: "0x40f941e48a552bf496b154af6bf55725f18d77c3"
      abi: Finder
      startBlock: 9247083
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - InterfaceImplementation
      abis:
        - name: Finder
          file: ./abis/Finder.json
      eventHandlers:
        - event: InterfaceImplementationChanged(indexed bytes32,indexed address)
          handler: handleInterfaceImplementationChanged
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleFinderOwnershipTransferred
  - kind: ethereum/contract
    name: VotingToken
    network: mainnet
    source:
      address: "0x04fa0d235c4abf4bcf4787af4cf447de572ef828"
      abi: VotingToken
      startBlock: 9247089
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - User
      abis:
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferVotingToken
  - kind: ethereum/contract
    name: IdentifierWhitelist
    network: mainnet
    source:
      address: "0xcf649d9da4d1362c4daea67573430bd6f945e570"
      abi: IdentifierWhitelist
      startBlock: 9937679
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - PriceIdentifier
      abis:
        - name: IdentifierWhitelist
          file: ./abis/IdentifierWhitelist.json
      eventHandlers:
        - event: SupportedIdentifierAdded(indexed bytes32)
          handler: handleSupportedIdentifierAdded
        - event: SupportedIdentifierRemoved(indexed bytes32)
          handler: handleSupportedIdentifierRemoved
  - kind: ethereum/contract
    name: Store
    network: mainnet
    source:
      address: "0x54f44ea3d2e7aa0ac089c4d8f7c93c27844057bf"
      abi: Store
      startBlock: 9937562
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
      abis:
        - name: Store
          file: ./abis/Store.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        # - event: NewFinalFee((uint256))
        #   handler: handleNewFinalFee
        - event: NewFixedOracleFeePerSecondPerPfc((uint256))
          handler: handleNewFixedOracleFeePerSecondPerPfc
        - event: NewWeeklyDelayFeePerSecondPerPfc((uint256))
          handler: handleNewWeeklyDelayFeePerSecondPerPfc
      callHandlers:
        - function: setFinalFee(address,(uint256))
          handler: handleSetFinalFee
  - kind: ethereum/contract
    name: AddressWhitelist
    network: mainnet
    source:
      address: "0xdbf90434df0b98219f87d112f37d74b1d90758c7"
      abi: AddressWhitelist
      startBlock: 10484890
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
        - Token
      abis:
        - name: AddressWhitelist
          file: ./abis/AddressWhitelist.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: AddedToWhitelist(indexed address)
          handler: handleAddedToWhitelist
        - event: RemovedFromWhitelist(indexed address)
          handler: handleRemovedFromWhitelist
  - kind: ethereum/contract
    name: Voting
    network: mainnet
    source:
      address: "0x9921810c710e7c3f7a7c6831e30929f19537a545"
      abi: Voting
      startBlock: 9937588
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - CommittedVote
        - RevealedVote
        - PriceRequest
        - User
        - PriceIdentifier
        - Store
      abis:
        - name: Voting
          file: ./abis/Voting.json
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: EncryptedVote(indexed address,indexed uint256,indexed bytes32,uint256,bytes)
          handler: handleEncryptedVote
        - event: PriceRequestAdded(indexed uint256,indexed bytes32,uint256)
          handler: handlePriceRequestAdded
        - event: PriceResolved(indexed uint256,indexed bytes32,uint256,int256)
          handler: handlePriceResolved
        - event: RewardsRetrieved(indexed address,indexed uint256,indexed bytes32,uint256,uint256)
          handler: handleRewardsRetrieved
        - event: VoteCommitted(indexed address,indexed uint256,indexed bytes32,uint256)
          handler: handleVoteCommitted
        - event: VoteRevealed(indexed address,indexed uint256,indexed bytes32,uint256,int256,uint256)
          handler: handleVoteRevealed
      callHandlers:
        - function: setGatPercentage((uint256))
          handler: handleSetGatPercentage
        - function: setInflationRate((uint256))
          handler: handleSetInflationRate
  - kind: ethereum/contract
    name: NewVoting
    network: mainnet
    source:
      address: "0x1d847fb6e04437151736a53f09b6e49713a52aad"
      abi: Voting
      startBlock: 10893080
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - CommittedVote
        - RevealedVote
        - PriceRequest
        - User
        - PriceIdentifier
        - Store
      abis:
        - name: Voting
          file: ./abis/Voting.json
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: EncryptedVote(indexed address,indexed uint256,indexed bytes32,uint256,bytes)
          handler: handleEncryptedVote
        - event: PriceRequestAdded(indexed uint256,indexed bytes32,uint256)
          handler: handlePriceRequestAdded
        - event: PriceResolved(indexed uint256,indexed bytes32,uint256,int256)
          handler: handlePriceResolved
        - event: RewardsRetrieved(indexed address,indexed uint256,indexed bytes32,uint256,uint256)
          handler: handleRewardsRetrieved
        - event: VoteCommitted(indexed address,indexed uint256,indexed bytes32,uint256)
          handler: handleVoteCommitted
        - event: VoteRevealed(indexed address,indexed uint256,indexed bytes32,uint256,int256,uint256)
          handler: handleVoteRevealed
      callHandlers:
        - function: setGatPercentage((uint256))
          handler: handleSetGatPercentage
        - function: setInflationRate((uint256))
          handler: handleSetInflationRate
  - kind: ethereum/contract
    name: VotingAncillary
    network: mainnet
    source:
      address: "0x8b1631ab830d11531ae83725fda4d86012eccd77"
      abi: VotingAncillary
      startBlock: 11876839 
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - CommittedVote
        - RevealedVote
        - PriceRequest
        - User
        - PriceIdentifier
        - Store
      abis:
        - name: VotingAncillary
          file: ./abis/VotingAncillary.json
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: EncryptedVote(indexed address,indexed uint256,indexed bytes32,uint256,bytes,bytes)
          handler: handleEncryptedVoteAncillary
        - event: PriceRequestAdded(indexed uint256,indexed bytes32,uint256)
          handler: handlePriceRequestAddedAncillary
        - event: PriceResolved(indexed uint256,indexed bytes32,uint256,int256,bytes)
          handler: handlePriceResolvedAncillary
        - event: RewardsRetrieved(indexed address,indexed uint256,indexed bytes32,uint256,bytes,uint256)
          handler: handleRewardsRetrievedAncillary
        - event: VoteCommitted(indexed address,indexed uint256,indexed bytes32,uint256,bytes)
          handler: handleVoteCommittedAncillary
        - event: VoteRevealed(indexed address,indexed uint256,indexed bytes32,uint256,int256,bytes,uint256)
          handler: handleVoteRevealedAncillary
      callHandlers:
        - function: setGatPercentage((uint256))
          handler: handleSetGatPercentageAncillary
        - function: setInflationRate((uint256))
          handler: handleSetInflationRateAncillary
  - kind: ethereum/contract
    name: Registry
    network: mainnet
    source:
      address: "0x3e532e6222afe9bcf02dcb87216802c75d5113ae"
      abi: Registry
      startBlock: 9937650
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
        - ContractCreator
        - User
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
      eventHandlers:
        - event: NewContractRegistered(indexed address,indexed address,address[])
          handler: handleNewContractRegistered
        - event: AddedSharedMember(indexed uint256,indexed address,indexed address)
          handler: handleAddedSharedMember
        - event: RemovedSharedMember(indexed uint256,indexed address,indexed address)
          handler: handleRemovedSharedMember
  - kind: ethereum/contract
    name: Governor
    network: mainnet
    source:
      address: "0x592349f7dedb2b75f9d4f194d4b7c16d82e507dc"
      abi: Governor
      startBlock: 9937467
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Proposal
        - PriceRequest
      abis:
        - name: Governor
          file: ./abis/Governor.json
      eventHandlers:
        - event: NewProposal(indexed uint256,(address,uint256,bytes)[])
          handler: handleNewProposal
        - event: ProposalExecuted(indexed uint256,uint256)
          handler: handleProposalExecuted
templates:
  - name: CollateralERC20
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleCollateralTransfer
  - name: FeeERC20
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Store
          file: ./abis/Store.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleFeeTransfer
  - name: ExpiringMultiPartyCreator
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ExpiringMultiPartyCreator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - ContractCreator
        - FinancialContract
      abis:
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CreatedExpiringMultiParty(indexed address,indexed address)
          handler: handleCreatedExpiringMultiParty
  - name: ExpiringMultiParty
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ExpiringMultiParty
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
        - Store
      abis:
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
      eventHandlers:
        - event: FinalFeesPaid(indexed uint256)
          handler: handleFinalFeesPaid
        - event: RegularFeesPaid(indexed uint256,indexed uint256)
          handler: handleRegularFeesPaid
        - event: PositionCreated(indexed address,indexed uint256,indexed uint256)
          handler: handlePositionCreated
        - event: SettleExpiredPosition(indexed address,indexed uint256,indexed uint256)
          handler: handleSettleExpiredPosition
        - event: Redeem(indexed address,indexed uint256,indexed uint256)
          handler: handleRedeem
        - event: Deposit(indexed address,indexed uint256)
          handler: handleDeposit
        - event: Withdrawal(indexed address,indexed uint256)
          handler: handleWithdrawal
        - event: NewSponsor(indexed address)
          handler: handleNewSponsor
        - event: EndedSponsorPosition(indexed address)
          handler: handleEndedSponsorPosition
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreated
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreatedNew
        - event: LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleLiquidationDisputed
        - event: DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
          handler: handleDisputeSettled
        - event: RequestTransferPosition(indexed address)
          handler: handleRequestTransferPosition
        - event: RequestTransferPositionCanceled(indexed address)
          handler: handleRequestTransferPositionCanceled
        - event: RequestTransferPositionExecuted(indexed address,indexed address)
          handler: handleRequestTransferPositionExecuted
        - event: RequestWithdrawal(indexed address,indexed uint256)
          handler: handleRequestWithdrawal
        - event: RequestWithdrawalCanceled(indexed address,indexed uint256)
          handler: handleRequestWithdrawalCanceled
        - event: RequestWithdrawalExecuted(indexed address,indexed uint256)
          handler: handleRequestWithdrawalExecuted
      callHandlers:
        - function: withdrawLiquidation(uint256,address)
          handler: handleLiquidationWithdrawn
  # - ContractExpired(indexed address)
  # + Deposit(indexed address,indexed uint256)
  # + DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
  # - EmergencyShutdown(indexed address,uint256,uint256)
  # + EndedSponsorPosition(indexed address)
  # + FinalFeesPaid(indexed uint256)
  # + LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
  # + LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
  # + LiquidationWithdrawn(indexed address,uint256,indexed uint8)
  # + NewSponsor(indexed address)
  # + PositionCreated(indexed address,indexed uint256,indexed uint256)
  # + Redeem(indexed address,indexed uint256,indexed uint256)
  # + RegularFeesPaid(indexed uint256,indexed uint256)
  # + RequestTransferPosition(indexed address)
  # + RequestTransferPositionCanceled(indexed address)
  # + RequestTransferPositionExecuted(indexed address,indexed address)
  # + RequestWithdrawal(indexed address,indexed uint256)
  # + RequestWithdrawalCanceled(indexed address,indexed uint256)
  # + RequestWithdrawalExecuted(indexed address,indexed uint256)
  # + SettleExpiredPosition(indexed address,indexed uint256,indexed uint256)
  # + Withdrawal(indexed address,indexed uint256)
